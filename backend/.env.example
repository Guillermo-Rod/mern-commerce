# APP
APP_PORT=4000
APP_ENV=local # or production
APP_URL=http://localhost:4000
APP_KEY=
APP_REFRESH_KEY=
APP_IS_TESTING=false #Overwrited when executes npm run test to "true"

# Database
# MONGO_HOST=database, // In docker you need to use the service name, when is a not docker project use "localhost" or your real host
MONGODB_HOST=localhost
MONGODB_PORT=27017
MONGODB_DATABASE=test
MONGODB_USERNAME=
MONGODB_PASSWORD=
MONGODB_OPTIONS="?authSource=test"

#
# In admin mode
# use "root" as role
# use "admin" as db
# use an strong password in "pwd"
# 
# use ecommerce
# 
# db.createUser({     
#     user: "euser",     
#     pwd: "upassword",    
#     roles: [ { role: "readWrite", db: "ecommerce" } ] 
# });
# 
# Generates something like:
# mongodb://euser:upassword@localhost:27017/ecommerce?authSource=ecommerce
# 

# MongoDB UI - Mongo-Express
# stable version: 
# cd C:\laragon\www\nodejs\mongo-express
# npm install mongo-express@1.0.0
# cd C:\laragon\www\nodejs\mongo-express\node_modules\mongo-express
# configure mongodb uri sitring: confing.js > mongo.connectionString
# npm exec mongo-express

# CORS
# frontend url
CORS_ALLOWED_ORIGINS=
CORS_CREDENTIALS=false
